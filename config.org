* emacs-organizer
** layout
I use colemak keyboard layout see layout.org file -- [[./layout.org][link]]

** use cases
I structured my config by use cases I apply emacs in.


*** programming
**** language server client
#+BEGIN_SRC elisp
(use-package eglot
  :config (add-to-list 'eglot-server-programs
			  '((c++-mode c-mode) "clangd")))  
#+END_SRC

**** python venv support
#+BEGIN_SRC elisp
(use-package pyvenv)
#+END_SRC

**** autocomplete
Press C-M-i to activate emacs autocomplete.

Frankly speaking, I copy this snippet from the official vertico docs:

https://github.com/minad/vertico?tab=readme-ov-file#completion-at-point-and-completion-in-region


#+BEGIN_SRC elisp
   (use-package vertico
     :init (vertico-mode)
      (setq completion-in-region-function
	    (lambda (&rest args)
	      (apply (if vertico-mode
			 #'consult-completion-in-region
		       #'completion--in-region)
		     args))))

    (use-package consult)

    (use-package consult-eglot)
#+END_SRC

*** file manages
I use buildin dired for now.

**** Work-arounds

***** OpenBSD
Use ls from GNU coreutils on OpenBSD
#+BEGIN_SRC elisp
  (when (eq system-type 'berkeley-unix)
  (setq insert-directory-program "gls")) 
#+END_SRC



*** rss reader 
Elfeed in my config is interconneted with howm.

**** elfeed use-package:
#+BEGIN_SRC elisp
(use-package elfeed
  :ensure t
  :config
  (setq elfeed-db-directory "~/howm/.elfeed")
    (setq elfeed-curl-program-name "curl"))
#+END_SRC

**** elfeed-org use-package
#+BEGIN_SRC elisp
(use-package elfeed-org
  :ensure t
  :config
  (elfeed-org)
  :after howm)
#+END_SRC

**** advices for interconnecting with howm
#+BEGIN_SRC elisp
(define-advice elfeed (:before (&rest _args))
  (setq rmh-elfeed-org-files (my-elfeed-file-names-in-howm)))


(define-advice elfeed-update (:before (&rest _args))
  (setq rmh-elfeed-org-files (my-elfeed-file-names-in-howm)))
#+END_SRC



